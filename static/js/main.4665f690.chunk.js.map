{"version":3,"sources":["components/Box.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Box","props","style","background","state","className","onClick","fontFamily","color","fontSize","marginBottom","Header","params","App","initialState","Array","fill","statusArray","useState","boxValue","setBoxValue","turn1","setTurn1","filledStatus","setFilledStatus","count","setCount","fillValue","index","sttsarr","from","strings","useEffect","winner","checkWinner","alert","arr","winCombination","i","length","a","b","c","turn","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4665f690.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./Box.css\";\r\n\r\n\r\nfunction Box(props) {\r\n    const style = {\r\n        background: (props.state) ? \"rgb(5, 5, 185)\" : \"rgb(71, 71, 243)\",\r\n    }\r\n    return (\r\n        <div className='Box' style={style} onClick={props.onClick} > {props.state}</div >\r\n    );\r\n}\r\n\r\nexport default Box;","import React from 'react';\r\n\r\nconst style = { fontFamily: \"cursive\", color: \"red\", fontSize: \"3.3em\", marginBottom: \"10px\" }\r\n\r\nfunction Header(params) {\r\n    return (\r\n        <div style={style}>Tic Tac Toe</div>\r\n    );\r\n}\r\nexport default Header;","import Box from \"./components/Box\";\nimport Header from \"./components/Header\";\nimport './App.css';\nimport { useState, useEffect } from \"react\";\n\n\n\nfunction App() {\n  const initialState = Array(9).fill(\"\");\n  const statusArray = Array(9).fill(false);\n\n  const [boxValue, setBoxValue] = useState(initialState);\n  const [turn1, setTurn1] = useState(false);\n  const [filledStatus, setFilledStatus] = useState(statusArray);\n  const [count, setCount] = useState(0);\n\n  const fillValue = (index) => {\n    if (!filledStatus[index]) {\n      let sttsarr = Array.from(filledStatus);\n      sttsarr[index] = true;\n      setFilledStatus(sttsarr);\n      let strings = Array.from(boxValue);\n      strings[index] = turn1 ? \"X\" : \"O\";\n      setBoxValue(strings);\n      setTurn1(!turn1);\n      setCount(count + 1);\n    }\n  }\n\n  useEffect(() => {\n    const winner = checkWinner(boxValue);\n    if (winner) {\n      if (winner === \"X\") {\n        alert(`Player 2 Wins.`);\n      }\n      else {\n        alert(`Player 1 Wins.`);\n      }\n      setBoxValue(initialState);\n      setTurn1(false);\n      setFilledStatus(statusArray);\n      setCount(0);\n    }\n    if (count === 9 && !winner) {\n      alert(\"Oops ! It's A Draw\");\n      setBoxValue(initialState);\n      setTurn1(false);\n      setFilledStatus(statusArray);\n      setCount(0);\n    }\n  }, [boxValue, count, initialState, statusArray])\n\n  const checkWinner = (arr) => {\n    const winCombination = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6]\n    ];\n    for (let i = 0; i < winCombination.length; i++) {\n      const [a, b, c] = winCombination[i];\n      if ((arr[a] === arr[b]) && (arr[a] === arr[c])) {\n        return arr[a];\n      }\n    }\n    return null;\n  }\n  const turn = {\n    background: turn1 ? \"yellow\" : \"rgb(255, 127, 212)\",\n  }\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"player\" style={turn}>\n        <h3>Player {turn1 ? \"2\" : \"1\"}'s Turn</h3>\n      </div>\n      <div className=\"line\">\n        <Box state={boxValue[0]} onClick={() => fillValue(0)} />\n        <Box state={boxValue[1]} onClick={() => fillValue(1)} />\n        <Box state={boxValue[2]} onClick={() => fillValue(2)} />\n      </div>\n      <div className=\"line\">\n        <Box state={boxValue[3]} onClick={() => fillValue(3)} />\n        <Box state={boxValue[4]} onClick={() => fillValue(4)} />\n        <Box state={boxValue[5]} onClick={() => fillValue(5)} />\n      </div>\n      <div className=\"line\">\n        <Box state={boxValue[6]} onClick={() => fillValue(6)} />\n        <Box state={boxValue[7]} onClick={() => fillValue(7)} />\n        <Box state={boxValue[8]} onClick={() => fillValue(8)} />\n      </div>\n      <button className=\"Button\" onClick={() => {\n        setBoxValue(initialState);\n        setTurn1(false);\n        setFilledStatus(statusArray);\n        setCount(0);\n      }\n      }>Reset The Game</button>\n\n    </div >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}